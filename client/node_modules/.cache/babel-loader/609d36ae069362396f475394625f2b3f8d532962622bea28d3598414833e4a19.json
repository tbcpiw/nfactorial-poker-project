{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/RoomPage.js\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomPage() {\n  _s();\n  var _cards$find;\n  const {\n    roomId\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  useEffect(() => {\n    // Создаём локальный socket для этого компонента\n    const socket = io('http://localhost:3001');\n\n    // Как только подключились — сразу входим в комнату\n    const playerName = prompt('Enter your name');\n    socket.emit('join_room', {\n      roomId,\n      playerName\n    });\n\n    // Слушаем событие обновления списка игроков\n    socket.on('room_players', updatedPlayers => {\n      setPlayers(updatedPlayers);\n    });\n\n    // Слушаем событие старта игры\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setStatusMessage('Game has started!');\n    });\n\n    // Запросим сразу же список игроков, если сервер при входе не отсылает прошлые\n    socket.emit('request_room_players', {\n      roomId\n    });\n\n    // Очистка при размонтировании\n    return () => {\n      socket.off('room_players');\n      socket.off('game_started');\n      socket.disconnect();\n    };\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: p.name\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Cards:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_cards$find = cards.find(c => {\n          var _players$find;\n          return c.playerId === ((_players$find = players.find(p => p.name === prompt)) === null || _players$find === void 0 ? void 0 : _players$find.id);\n        })) === null || _cards$find === void 0 ? void 0 : _cards$find.cards.map((card, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: card\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"5h1IRjL9Hbc2xtj9z68BahDaVkI=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","io","jsxDEV","_jsxDEV","RoomPage","_s","_cards$find","roomId","players","setPlayers","cards","setCards","statusMessage","setStatusMessage","socket","playerName","prompt","emit","on","updatedPlayers","off","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","name","id","length","find","c","_players$find","playerId","card","i","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["// client/src/pages/RoomPage.js\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Создаём локальный socket для этого компонента\r\n    const socket = io('http://localhost:3001');\r\n\r\n    // Как только подключились — сразу входим в комнату\r\n    const playerName = prompt('Enter your name');\r\n    socket.emit('join_room', { roomId, playerName });\r\n\r\n    // Слушаем событие обновления списка игроков\r\n    socket.on('room_players', (updatedPlayers) => {\r\n      setPlayers(updatedPlayers);\r\n    });\r\n\r\n    // Слушаем событие старта игры\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setStatusMessage('Game has started!');\r\n    });\r\n\r\n    // Запросим сразу же список игроков, если сервер при входе не отсылает прошлые\r\n    socket.emit('request_room_players', { roomId });\r\n\r\n    // Очистка при размонтировании\r\n    return () => {\r\n      socket.off('room_players');\r\n      socket.off('game_started');\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Room: {roomId}</h2>\r\n\r\n      <h3>Players:</h3>\r\n      <ul>\r\n        {players.map(p => (\r\n          <li key={p.id}>{p.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n\r\n      {cards.length > 0 && (\r\n        <div>\r\n          <h3>Your Cards:</h3>\r\n          <ul>\r\n            {cards\r\n              .find(c => c.playerId === players.find(p => p.name === prompt)?.id)\r\n              ?.cards.map((card, i) => <li key={i}>{card}</li>)}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}