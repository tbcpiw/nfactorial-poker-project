{"ast":null,"code":"// server/index.js\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\nconst port = 3001;\napp.use(cors()); // Разрешаем запросы с других портов, например с 3000\napp.use(express.json());\nlet rooms = []; // Список комнат\n\n// Проверка сервера\napp.get('/', (req, res) => {\n  res.send('Сервер работает!');\n});\n\n// Создание комнаты\napp.post('/create-room', (req, res) => {\n  const roomId = Math.random().toString(36).substr(2, 9);\n  rooms.push(roomId);\n  console.log(`Создана комната: ${roomId}`);\n  res.json({\n    message: 'Комната создана!',\n    roomId\n  });\n});\n\n// Присоединение к комнате\napp.post('/join-room', (req, res) => {\n  const {\n    roomId\n  } = req.body;\n  if (rooms.includes(roomId)) {\n    console.log(`Присоединились к комнате: ${roomId}`);\n    res.json({\n      message: 'Вы присоединились к комнате!',\n      roomId\n    });\n  } else {\n    res.status(404).json({\n      message: 'Комната не найдена'\n    });\n  }\n});\napp.listen(port, () => {\n  console.log(`Сервер запущен на порту ${port}`);\n});","map":{"version":3,"names":["express","require","cors","app","port","use","json","rooms","get","req","res","send","post","roomId","Math","random","toString","substr","push","console","log","message","body","includes","status","listen"],"sources":["C:/Users/abdum/poker-client/src/App.js"],"sourcesContent":["// server/index.js\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\nconst port = 3001;\n\napp.use(cors()); // Разрешаем запросы с других портов, например с 3000\napp.use(express.json());\n\nlet rooms = []; // Список комнат\n\n// Проверка сервера\napp.get('/', (req, res) => {\n  res.send('Сервер работает!');\n});\n\n// Создание комнаты\napp.post('/create-room', (req, res) => {\n  const roomId = Math.random().toString(36).substr(2, 9);\n  rooms.push(roomId);\n  console.log(`Создана комната: ${roomId}`);\n  res.json({ message: 'Комната создана!', roomId });\n});\n\n// Присоединение к комнате\napp.post('/join-room', (req, res) => {\n  const { roomId } = req.body;\n  if (rooms.includes(roomId)) {\n    console.log(`Присоединились к комнате: ${roomId}`);\n    res.json({ message: 'Вы присоединились к комнате!', roomId });\n  } else {\n    res.status(404).json({ message: 'Комната не найдена' });\n  }\n});\n\napp.listen(port, () => {\n  console.log(`Сервер запущен на порту ${port}`);\n});\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAG,IAAI;AAEjBD,GAAG,CAACE,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjBC,GAAG,CAACE,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AAEvB,IAAIC,KAAK,GAAG,EAAE,CAAC,CAAC;;AAEhB;AACAJ,GAAG,CAACK,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,kBAAkB,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACS,IAAI,CAAC,cAAc,EAAE,CAACH,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAMG,MAAM,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACtDV,KAAK,CAACW,IAAI,CAACL,MAAM,CAAC;EAClBM,OAAO,CAACC,GAAG,CAAC,oBAAoBP,MAAM,EAAE,CAAC;EACzCH,GAAG,CAACJ,IAAI,CAAC;IAAEe,OAAO,EAAE,kBAAkB;IAAER;EAAO,CAAC,CAAC;AACnD,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACS,IAAI,CAAC,YAAY,EAAE,CAACH,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM;IAAEG;EAAO,CAAC,GAAGJ,GAAG,CAACa,IAAI;EAC3B,IAAIf,KAAK,CAACgB,QAAQ,CAACV,MAAM,CAAC,EAAE;IAC1BM,OAAO,CAACC,GAAG,CAAC,6BAA6BP,MAAM,EAAE,CAAC;IAClDH,GAAG,CAACJ,IAAI,CAAC;MAAEe,OAAO,EAAE,8BAA8B;MAAER;IAAO,CAAC,CAAC;EAC/D,CAAC,MAAM;IACLH,GAAG,CAACc,MAAM,CAAC,GAAG,CAAC,CAAClB,IAAI,CAAC;MAAEe,OAAO,EAAE;IAAqB,CAAC,CAAC;EACzD;AACF,CAAC,CAAC;AAEFlB,GAAG,CAACsB,MAAM,CAACrB,IAAI,EAAE,MAAM;EACrBe,OAAO,CAACC,GAAG,CAAC,2BAA2BhB,IAAI,EAAE,CAAC;AAChD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}