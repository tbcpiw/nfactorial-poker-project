{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\JoinPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/JoinPage.js\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './JoinPage.css'; // Подключаем CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JoinPage() {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [password, setPassword] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRooms = async () => {\n      const response = await fetch('http://localhost:3001/rooms');\n      const data = await response.json();\n      setRooms(data);\n    };\n    fetchRooms();\n  }, []);\n  const handleJoinRoom = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/join-room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setStatusMessage(data.message);\n      } else {\n        setStatusMessage(data.message);\n        navigate(`/room/${roomId}`);\n      }\n    } catch (error) {\n      setStatusMessage('Failed to connect to the server');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"join-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"join-title\",\n      children: \"Join a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"subheading\",\n      children: \"Public Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"room-list\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"room-item\",\n        children: [room.roomId, \" (Public)\"]\n      }, room.roomId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Room ID\",\n      value: roomId,\n      onChange: e => setRoomId(e.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password (if private)\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinRoom,\n      className: \"btn green\",\n      children: \"Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(JoinPage, \"9lnSA4DKDG3dwrWgjMw1ZsbVLC8=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","JoinPage","_s","roomId","setRoomId","password","setPassword","statusMessage","setStatusMessage","rooms","setRooms","navigate","fetchRooms","response","fetch","data","json","handleJoinRoom","method","headers","body","JSON","stringify","ok","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/JoinPage.js"],"sourcesContent":["// client/src/pages/JoinPage.js\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './JoinPage.css'; // Подключаем CSS\r\n\r\nfunction JoinPage() {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [rooms, setRooms] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      const response = await fetch('http://localhost:3001/rooms');\r\n      const data = await response.json();\r\n      setRooms(data);\r\n    };\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  const handleJoinRoom = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/join-room', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ roomId, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setStatusMessage(data.message);\r\n      } else {\r\n        setStatusMessage(data.message);\r\n        navigate(`/room/${roomId}`);\r\n      }\r\n    } catch (error) {\r\n      setStatusMessage('Failed to connect to the server');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"join-container\">\r\n      <h2 className=\"join-title\">Join a Room</h2>\r\n\r\n      <h3 className=\"subheading\">Public Rooms</h3>\r\n      <ul className=\"room-list\">\r\n        {rooms.map((room) => (\r\n          <li key={room.roomId} className=\"room-item\">\r\n            {room.roomId} (Public)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Room ID\"\r\n        value={roomId}\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n        className=\"input\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter Password (if private)\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className=\"input\"\r\n      />\r\n\r\n      <button onClick={handleJoinRoom} className=\"btn green\">Join Room</button>\r\n      <p className=\"status-message\">{statusMessage}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}