{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\JoinPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/JoinPage.js\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JoinPage() {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [password, setPassword] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [rooms, setRooms] = useState([]); // Для хранения списка публичных комнат\n\n  // Получаем список публичных комнат с сервера\n  useEffect(() => {\n    const fetchRooms = async () => {\n      const response = await fetch('http://localhost:3001/rooms');\n      const data = await response.json();\n      setRooms(data); // Сохраняем публичные комнаты\n    };\n    fetchRooms();\n  }, []);\n  const handleJoinRoom = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/join-room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId,\n          password\n        }) // Отправляем roomId и пароль\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setStatusMessage(errorData.message);\n      } else {\n        const data = await response.json();\n        setStatusMessage(data.message);\n      }\n    } catch (error) {\n      setStatusMessage('Failed to connect to the server');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Public Rooms:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [room.roomId, \" (Public)\"]\n      }, room.roomId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Room ID\",\n      value: roomId,\n      onChange: e => setRoomId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password (if private)\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinRoom,\n      children: \"Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(JoinPage, \"3kZ0d+hzin1Z9dROqD+ja9e0j8I=\");\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","JoinPage","_s","roomId","setRoomId","password","setPassword","statusMessage","setStatusMessage","rooms","setRooms","fetchRooms","response","fetch","data","json","handleJoinRoom","method","headers","body","JSON","stringify","ok","errorData","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/JoinPage.js"],"sourcesContent":["// client/src/pages/JoinPage.js\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction JoinPage() {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [rooms, setRooms] = useState([]); // Для хранения списка публичных комнат\r\n\r\n  // Получаем список публичных комнат с сервера\r\n  useEffect(() => {\r\n    const fetchRooms = async () => {\r\n      const response = await fetch('http://localhost:3001/rooms');\r\n      const data = await response.json();\r\n      setRooms(data); // Сохраняем публичные комнаты\r\n    };\r\n\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  const handleJoinRoom = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/join-room', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ roomId, password }), // Отправляем roomId и пароль\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setStatusMessage(errorData.message);\r\n      } else {\r\n        const data = await response.json();\r\n        setStatusMessage(data.message);\r\n      }\r\n    } catch (error) {\r\n      setStatusMessage('Failed to connect to the server');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Join a Room</h2>\r\n      \r\n      {/* Список публичных комнат */}\r\n      <h3>Public Rooms:</h3>\r\n      <ul>\r\n        {rooms.map((room) => (\r\n          <li key={room.roomId}>\r\n            {room.roomId} (Public)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Форма для ввода Room ID и пароля (для приватных комнат) */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Room ID\"\r\n        value={roomId}\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Enter Password (if private)\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleJoinRoom}>Join Room</button>\r\n      <p>{statusMessage}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}