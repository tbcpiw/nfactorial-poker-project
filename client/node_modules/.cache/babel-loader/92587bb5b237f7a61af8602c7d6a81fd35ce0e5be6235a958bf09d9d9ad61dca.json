{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\n//RoomPage.js\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    background: '#34495e',\n    // Изменили фон\n    padding: '2rem',\n    borderRadius: '10px',\n    textAlign: 'center',\n    color: 'white',\n    // Добавили цвет текста\n    boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n  }\n};\nfunction RoomPage() {\n  _s();\n  var _players$, _players$find;\n  const {\n    roomId\n  } = useParams();\n\n  // общие стейты\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [showModal, setShowModal] = useState(true);\n  const [tempName, setTempName] = useState('');\n  const [myId, setMyId] = useState(null);\n  const [board, setBoard] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // ставки\n  const [pot, setPot] = useState(0);\n  const [currentBet, setCurrentBet] = useState(0);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [raiseAmount, setRaiseAmount] = useState(0);\n\n  // один сокет на компонент\n  const socketRef = useRef();\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socketRef.current = socket;\n    socket.on('connect', () => {\n      setMyId(socket.id);\n    });\n    socket.on('room_players', updated => {\n      setPlayers(updated);\n    });\n    socket.on('preflop_started', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Pre-flop started');\n    });\n    socket.on('betting_update', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n    });\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setStatusMessage('Game has started!');\n    });\n    socket.on('error_message', ({\n      message\n    }) => {\n      setStatusMessage(message);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const socket = socketRef.current;\n\n    // Обработчик новых сообщений\n    socket.on('chat_message', message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => {\n      socket.off('chat_message');\n    };\n  }, []);\n\n  // Отправка сообщений\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    socketRef.current.emit('chat_message', {\n      roomId,\n      sender: playerName,\n      text: newMessage\n    });\n    setNewMessage('');\n  };\n  useEffect(() => {\n    const chatContainer = document.querySelector('[style*=\"height: 200px\"]');\n    if (chatContainer) {\n      chatContainer.scrollTop = chatContainer.scrollHeight;\n    }\n\n    // Логирование для отладки\n    console.log('Current messages:', messages);\n  }, [messages]);\n\n  // после ввода имени — join + запрос списка\n  useEffect(() => {\n    const socket = socketRef.current;\n    if (!playerName || !myId) return;\n    socket.emit('join_room', {\n      roomId,\n      playerName\n    });\n    socket.emit('request_room_players', {\n      roomId\n    });\n  }, [playerName, myId, roomId]);\n  useEffect(() => {\n    const socket = socketRef.current;\n    socket.on('flop', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Flop dealt');\n    });\n    socket.on('turn', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Turn dealt');\n    });\n    socket.on('river', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('River dealt');\n    });\n    socket.on('showdown', ({\n      board,\n      winners\n    }) => {\n      setBoard(board);\n      if (winners.length === 1) {\n        setStatusMessage(`Winner: ${winners[0].name}`);\n      } else {\n        setStatusMessage(`Winners: ${winners.map(w => w.name).join(', ')}`);\n      }\n    });\n    return () => {\n      socket.off('flop');\n      socket.off('turn');\n      socket.off('river');\n      socket.off('showdown');\n    };\n  }, []);\n\n  // сабмит модалки\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    const name = tempName.trim();\n    if (name) {\n      setPlayerName(name);\n      setShowModal(false);\n    }\n  };\n\n  // определяем хоста\n  const isHost = ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id) === myId;\n\n  // старт игры + инициализация pre-flop\n  const handleStartGame = () => {\n    const socket = socketRef.current;\n    socket.emit('start_game', {\n      roomId\n    });\n    socket.emit('init_preflop', {\n      roomId\n    });\n  };\n\n  // мои карты \n  const myCards = ((_players$find = players.find(p => p.id === myId)) === null || _players$find === void 0 ? void 0 : _players$find.cards) || [];\n  const getPlayerPosition = (index, total) => {\n    const radius = 200; // Радиус круга\n    const angle = (index * (360 / total) - 90) * (Math.PI / 180);\n    return {\n      left: 50 + radius * Math.cos(angle) + '%',\n      top: 50 + radius * Math.sin(angle) + '%',\n      transform: 'translate(-50%, -50%)'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempName,\n            onChange: e => setTempName(e.target.value),\n            style: {\n              padding: '8px',\n              marginBottom: '1rem',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              color: '#333' // Цвет текста в инпуте\n            },\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: '#27ae60',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            type: \"submit\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '20px auto',\n          padding: '20px',\n          background: '#34495e',\n          borderRadius: '10px',\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '20px 0',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Players:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0\n            },\n            children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: p.name\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Pot: \", pot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current Bet: \", currentBet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            minHeight: '400px',\n            border: '2px dashed #7f8c8d',\n            borderRadius: '10px',\n            padding: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)'\n            },\n            children: board.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px',\n                marginBottom: '20px'\n              },\n              children: board.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n                value: card\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 47\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this), myCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              bottom: '20px',\n              left: '50%',\n              transform: 'translateX(-50%)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px'\n              },\n              children: myCards.map((v, i) => /*#__PURE__*/_jsxDEV(Card, {\n                value: v\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            textAlign: 'center'\n          },\n          children: [!statusMessage && isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartGame,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 19\n          }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 35\n          }, this), isHost && statusMessage === 'Pre-flop started' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('deal_flop', {\n              roomId\n            }),\n            children: \"Deal Flop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 19\n          }, this), isHost && statusMessage === 'Flop dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('deal_turn', {\n              roomId\n            }),\n            children: \"Deal Turn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 19\n          }, this), isHost && statusMessage === 'Turn dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('deal_river', {\n              roomId\n            }),\n            children: \"Deal River\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this), isHost && statusMessage === 'River dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('showdown', {\n              roomId\n            }),\n            children: \"Showdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          bottom: '20px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          display: 'flex',\n          gap: '15px',\n          padding: '15px',\n          background: 'rgba(0,0,0,0.8)',\n          borderRadius: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.1\n          },\n          whileTap: {\n            scale: 0.9\n          },\n          style: buttonStyle,\n          onClick: handleFold,\n          children: \"Fold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.1\n          },\n          style: {\n            ...buttonStyle,\n            background: '#27ae60'\n          },\n          onClick: handleCall,\n          children: [\"Call \", currentBet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: playerStack,\n            value: raiseAmount,\n            onChange: e => setRaiseAmount(e.target.value),\n            style: {\n              width: '150px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n            whileHover: {\n              scale: 1.1\n            },\n            style: {\n              ...buttonStyle,\n              background: '#2980b9'\n            },\n            onClick: handleRaise,\n            children: [\"Raise \", raiseAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"4sr6UjePZrpP7xOiwsL9EQ591CM=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","useRef","io","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","modalStyles","overlay","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","modal","background","padding","borderRadius","textAlign","color","boxShadow","RoomPage","_s","_players$","_players$find","roomId","players","setPlayers","cards","setCards","statusMessage","setStatusMessage","playerName","setPlayerName","showModal","setShowModal","tempName","setTempName","myId","setMyId","board","setBoard","messages","setMessages","newMessage","setNewMessage","pot","setPot","currentBet","setCurrentBet","currentPlayerId","setCurrentPlayerId","raiseAmount","setRaiseAmount","socketRef","socket","current","on","id","updated","message","disconnect","prev","off","sendMessage","e","preventDefault","trim","emit","sender","text","chatContainer","document","querySelector","scrollTop","scrollHeight","console","log","winners","length","name","map","w","join","handleNameSubmit","isHost","handleStartGame","myCards","find","p","getPlayerPosition","index","total","radius","angle","Math","PI","cos","sin","transform","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","border","autoFocus","required","cursor","maxWidth","margin","listStyle","minHeight","gap","card","i","bottom","v","marginTop","onClick","motion","button","whileHover","scale","whileTap","buttonStyle","handleFold","handleCall","min","max","playerStack","handleRaise","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["//RoomPage.js\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Card from '../components/Card';\r\n\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0, \r\n    left: 0,\r\n    width: '100vw', \r\n    height: '100vh',\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    display: 'flex', \r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    zIndex: 1000,\r\n  },\r\n  modal: {\r\n    background: '#34495e', // Изменили фон\r\n    padding: '2rem',\r\n    borderRadius: '10px',\r\n    textAlign: 'center',\r\n    color: 'white', // Добавили цвет текста\r\n    boxShadow: '0 0 20px rgba(0,0,0,0.5)',\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n\r\n  // общие стейты\r\n  const [players, setPlayers]             = useState([]);\r\n  const [cards, setCards]                 = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [playerName, setPlayerName]       = useState(''); \r\n  const [showModal, setShowModal]         = useState(true);\r\n  const [tempName, setTempName]           = useState('');\r\n  const [myId, setMyId]                   = useState(null);\r\n  const [board, setBoard]                 = useState([]);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n\r\n  // ставки\r\n  const [pot, setPot]                         = useState(0);\r\n  const [currentBet, setCurrentBet]           = useState(0);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [raiseAmount, setRaiseAmount]         = useState(0);\r\n\r\n  // один сокет на компонент\r\n  const socketRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3001');\r\n    socketRef.current = socket;\r\n\r\n    socket.on('connect', () => {\r\n      setMyId(socket.id);\r\n    });\r\n\r\n    socket.on('room_players', updated => {\r\n      setPlayers(updated);\r\n    });\r\n\r\n    socket.on('preflop_started', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Pre-flop started');\r\n    });\r\n\r\n    socket.on('betting_update', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n    });\r\n\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setStatusMessage('Game has started!');\r\n    });\r\n\r\n    socket.on('error_message', ({ message }) => {\r\n      setStatusMessage(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n\r\n    // Обработчик новых сообщений\r\n    socket.on('chat_message', (message) => {\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('chat_message');\r\n    };\r\n  }, []);\r\n\r\n  // Отправка сообщений\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    socketRef.current.emit('chat_message', {\r\n      roomId,\r\n      sender: playerName,\r\n      text: newMessage\r\n    });\r\n\r\n    setNewMessage('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const chatContainer = document.querySelector('[style*=\"height: 200px\"]');\r\n    if (chatContainer) {\r\n      chatContainer.scrollTop = chatContainer.scrollHeight;\r\n    }\r\n    \r\n    // Логирование для отладки\r\n    console.log('Current messages:', messages);\r\n  }, [messages]);\r\n\r\n  // после ввода имени — join + запрос списка\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n    if (!playerName || !myId) return;\r\n    socket.emit('join_room', { roomId, playerName });\r\n    socket.emit('request_room_players', { roomId });\r\n  }, [playerName, myId, roomId]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n\r\n    socket.on('flop', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Flop dealt');\r\n    });\r\n    socket.on('turn', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Turn dealt');\r\n    });\r\n    socket.on('river', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('River dealt');\r\n    });\r\n    socket.on('showdown', ({ board, winners }) => {\r\n      setBoard(board);\r\n      if (winners.length === 1) {\r\n        setStatusMessage(`Winner: ${winners[0].name}`);\r\n      } else {\r\n        setStatusMessage(`Winners: ${winners.map(w=>w.name).join(', ')}`);\r\n      }\r\n    });\r\n\r\n\r\n    return () => {\r\n      socket.off('flop');\r\n      socket.off('turn');\r\n      socket.off('river');\r\n      socket.off('showdown');\r\n    };\r\n  }, []);\r\n\r\n\r\n  // сабмит модалки\r\n  const handleNameSubmit = e => {\r\n    e.preventDefault();\r\n    const name = tempName.trim();\r\n    if (name) {\r\n      setPlayerName(name);\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  // определяем хоста\r\n  const isHost = players[0]?.id === myId;\r\n\r\n  // старт игры + инициализация pre-flop\r\n  const handleStartGame = () => {\r\n    const socket = socketRef.current;\r\n    socket.emit('start_game', { roomId });\r\n    socket.emit('init_preflop', { roomId });\r\n  };\r\n\r\n  // мои карты \r\n  const myCards = players.find(p => p.id === myId)?.cards || [];\r\n  const getPlayerPosition = (index, total) => {\r\n  const radius = 200; // Радиус круга\r\n  const angle = (index * (360 / total) - 90) * (Math.PI / 180);\r\n  return {\r\n    left: 50 + radius * Math.cos(angle) + '%',\r\n    top: 50 + radius * Math.sin(angle) + '%',\r\n    transform: 'translate(-50%, -50%)'\r\n  };\r\n};\r\n\r\n  return (\r\n    <div>\r\n      {showModal\r\n        ? (\r\n          <div style={modalStyles.overlay}>\r\n            <div style={modalStyles.modal}>\r\n              <h3 style={{ marginBottom: '1rem' }}>Enter your name</h3>\r\n              <form onSubmit={handleNameSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={tempName}\r\n                  onChange={e => setTempName(e.target.value)}\r\n                  style={{\r\n                    padding: '8px',\r\n                    marginBottom: '1rem',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid #ddd',\r\n                    color: '#333' // Цвет текста в инпуте\r\n                  }}\r\n                  autoFocus\r\n                  required\r\n                />\r\n                <button \r\n                  style={{\r\n                    background: '#27ae60',\r\n                    color: 'white',\r\n                    padding: '8px 16px',\r\n                    borderRadius: '4px',\r\n                    border: 'none',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  type=\"submit\"\r\n                >\r\n                  Join\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n        : (\r\n          <>\r\n            <div style={{ \r\n              maxWidth: '800px', \r\n              margin: '20px auto', \r\n              padding: '20px',\r\n              background: '#34495e',\r\n              borderRadius: '10px',\r\n              boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n            }}>\r\n              <h2 style={{ textAlign: 'center' }}>Room: {roomId}</h2>\r\n              \r\n              {/* Игроки и статус игры */}\r\n              <div style={{ margin: '20px 0', textAlign: 'center' }}>\r\n                <h3>Players:</h3>\r\n                <ul style={{ listStyle: 'none', padding: 0 }}>\r\n                  {players.map(p => <li key={p.id}>{p.name}</li>)}\r\n                </ul>\r\n                \r\n                <div>\r\n                  <p>Pot: {pot}</p>\r\n                  <p>Current Bet: {currentBet}</p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Игровой стол */}\r\n              <div style={{ \r\n                position: 'relative', \r\n                minHeight: '400px', \r\n                border: '2px dashed #7f8c8d',\r\n                borderRadius: '10px',\r\n                padding: '20px'\r\n              }}>\r\n                {/* Общие карты */}\r\n                <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                  {board.length > 0 && (\r\n                    <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\r\n                      {board.map((card, i) => <Card key={i} value={card} />)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Карты текущего игрока */}\r\n                {myCards.length > 0 && (\r\n                  <div style={{ \r\n                    position: 'absolute', \r\n                    bottom: '20px', \r\n                    left: '50%', \r\n                    transform: 'translateX(-50%)'\r\n                  }}>\r\n                    <div style={{ display: 'flex', gap: '10px' }}>\r\n                      {myCards.map((v,i) => <Card key={i} value={v} />)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Кнопки управления и статус */}\r\n              <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n                {!statusMessage && isHost && (\r\n                  <button onClick={handleStartGame}>Start Game</button>\r\n                )}\r\n\r\n                {statusMessage && <p>{statusMessage}</p>}\r\n\r\n                {/* Кнопки фаз */}\r\n                {isHost && statusMessage === 'Pre-flop started' && (\r\n                  <button onClick={() => socketRef.current.emit('deal_flop', { roomId })}>\r\n                    Deal Flop\r\n                  </button>\r\n                )}\r\n                {isHost && statusMessage === 'Flop dealt' && (\r\n                  <button onClick={() => socketRef.current.emit('deal_turn', { roomId })}>\r\n                    Deal Turn\r\n                  </button>\r\n                )}\r\n                {isHost && statusMessage === 'Turn dealt' && (\r\n                  <button onClick={() => socketRef.current.emit('deal_river', { roomId })}>\r\n                    Deal River\r\n                  </button>\r\n                )}\r\n                {isHost && statusMessage === 'River dealt' && (\r\n                  <button onClick={() => socketRef.current.emit('showdown', { roomId })}>\r\n                    Showdown\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div style={{\r\n              position: 'fixed',\r\n              bottom: '20px',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              display: 'flex',\r\n              gap: '15px',\r\n              padding: '15px',\r\n              background: 'rgba(0,0,0,0.8)',\r\n              borderRadius: '15px'\r\n            }}>\r\n              <motion.button \r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}\r\n                style={buttonStyle}\r\n                onClick={handleFold}\r\n              >\r\n                Fold\r\n              </motion.button>\r\n              \r\n              <motion.button\r\n                whileHover={{ scale: 1.1 }}\r\n                style={{...buttonStyle, background: '#27ae60'}}\r\n                onClick={handleCall}\r\n              >\r\n                Call {currentBet}\r\n              </motion.button>\r\n              \r\n              <div style={{ display: 'flex', gap: '10px' }}>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max={playerStack}\r\n                  value={raiseAmount}\r\n                  onChange={e => setRaiseAmount(e.target.value)}\r\n                  style={{ width: '150px' }}\r\n                />\r\n                <motion.button\r\n                  whileHover={{ scale: 1.1 }}\r\n                  style={{...buttonStyle, background: '#2980b9'}}\r\n                  onClick={handleRaise}\r\n                >\r\n                  Raise {raiseAmount}\r\n                </motion.button>\r\n              </div>\r\n            </div>\r\n            \r\n          </>\r\n            \r\n        )\r\n        \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}