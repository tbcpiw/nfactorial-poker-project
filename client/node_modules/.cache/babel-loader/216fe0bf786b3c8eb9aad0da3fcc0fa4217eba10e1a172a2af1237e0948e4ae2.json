{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/RoomPage.js\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [raiseAmount, setRaiseAmount] = useState(0);\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    background: '#fff',\n    padding: '2rem',\n    borderRadius: '10px',\n    textAlign: 'center'\n  }\n};\nfunction RoomPage() {\n  _s();\n  var _players$, _cards$find;\n  const {\n    roomId\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [showModal, setShowModal] = useState(true);\n  const [tempName, setTempName] = useState('');\n  const [myId, setMyId] = useState(null);\n  const [pot, setPot] = useState(0);\n  const [currentBet, setCurrentBet] = useState(0);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const socketRef = useRef(null);\n\n  // Создаём единственный сокет-экземпляр и подписываемся на события\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socketRef.current = socket;\n    socket.on('connect', () => {\n      setMyId(socket.id);\n    });\n    socket.on('room_players', updatedPlayers => {\n      setPlayers(updatedPlayers);\n    });\n    socket.on('preflop_started', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Pre-flop started');\n    });\n    socket.on('betting_update', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n    });\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setStatusMessage('Game has started!');\n    });\n    socket.on('error_message', ({\n      message\n    }) => {\n      setStatusMessage(message);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // После того как ввели имя, соединяемся с комнатой\n  useEffect(() => {\n    const socket = socketRef.current;\n    if (!playerName || !myId) return;\n    socket.emit('join_room', {\n      roomId,\n      playerName\n    });\n    socket.emit('request_room_players', {\n      roomId\n    });\n  }, [playerName, myId, roomId]);\n\n  // Обработчик формы ввода имени\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    const name = tempName.trim();\n    if (name) {\n      setPlayerName(name);\n      setShowModal(false);\n    }\n  };\n\n  // Хост (первый игрок в списке) может стартовать игру\n  const isHost = ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id) === myId;\n  const handleStartGame = () => {\n    socketRef.current.emit('start_game', {\n      roomId\n    });\n    // После старта игры инициализируем pre-flop\n    socketRef.current.emit('init_preflop', {\n      roomId\n    });\n  };\n\n  // Мои карты после старта\n  const myCards = ((_cards$find = cards.find(c => c.playerId === myId)) === null || _cards$find === void 0 ? void 0 : _cards$find.cards) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempName,\n            onChange: e => setTempName(e.target.value),\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), !showModal && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p.name\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pot: \", pot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Bet: \", currentBet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), !statusMessage && isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }, this), myCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Cards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: myCards.map((card, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: card\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), currentPlayerId === myId && statusMessage === 'Pre-flop started' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => socketRef.current.emit('player_action', {\n            roomId,\n            playerId: myId,\n            action: 'fold'\n          }),\n          children: \"Fold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => socketRef.current.emit('player_action', {\n            roomId,\n            playerId: myId,\n            action: 'check'\n          }),\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => socketRef.current.emit('player_action', {\n            roomId,\n            playerId: myId,\n            action: 'call'\n          }),\n          children: \"Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"sg3wMa3uXypFUL2YXk9qLNZQG7c=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","raiseAmount","setRaiseAmount","modalStyles","overlay","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","modal","background","padding","borderRadius","textAlign","RoomPage","_s","_players$","_cards$find","roomId","players","setPlayers","cards","setCards","statusMessage","setStatusMessage","playerName","setPlayerName","showModal","setShowModal","tempName","setTempName","myId","setMyId","pot","setPot","currentBet","setCurrentBet","currentPlayerId","setCurrentPlayerId","socketRef","socket","current","on","id","updatedPlayers","message","disconnect","emit","handleNameSubmit","e","preventDefault","name","trim","isHost","handleStartGame","myCards","find","c","playerId","children","style","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","autoFocus","required","map","p","onClick","length","card","i","action","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["// client/src/pages/RoomPage.js\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nconst [raiseAmount, setRaiseAmount] = useState(0);\r\n\r\n\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0, left: 0,\r\n    width: '100vw', height: '100vh',\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n    zIndex: 1000,\r\n  },\r\n  modal: {\r\n    background: '#fff',\r\n    padding: '2rem',\r\n    borderRadius: '10px',\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n\r\n  const [players, setPlayers]     = useState([]);\r\n  const [cards, setCards]         = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [playerName, setPlayerName]       = useState('');\r\n  const [showModal, setShowModal]         = useState(true);\r\n  const [tempName, setTempName]           = useState('');\r\n  const [myId, setMyId]                   = useState(null);\r\n\r\n  const [pot, setPot]                         = useState(0);\r\n  const [currentBet, setCurrentBet]           = useState(0);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n\r\n  const socketRef = useRef(null);\r\n\r\n  // Создаём единственный сокет-экземпляр и подписываемся на события\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3001');\r\n    socketRef.current = socket;\r\n\r\n    socket.on('connect', () => {\r\n      setMyId(socket.id);\r\n    });\r\n\r\n    socket.on('room_players', updatedPlayers => {\r\n      setPlayers(updatedPlayers);\r\n    });\r\n\r\n    socket.on('preflop_started', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Pre-flop started');\r\n    });\r\n\r\n    socket.on('betting_update', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n    });\r\n\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setStatusMessage('Game has started!');\r\n    });\r\n\r\n    socket.on('error_message', ({ message }) => {\r\n      setStatusMessage(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // После того как ввели имя, соединяемся с комнатой\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n    if (!playerName || !myId) return;\r\n    socket.emit('join_room', { roomId, playerName });\r\n    socket.emit('request_room_players', { roomId });\r\n  }, [playerName, myId, roomId]);\r\n\r\n  // Обработчик формы ввода имени\r\n  const handleNameSubmit = e => {\r\n    e.preventDefault();\r\n    const name = tempName.trim();\r\n    if (name) {\r\n      setPlayerName(name);\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  // Хост (первый игрок в списке) может стартовать игру\r\n  const isHost = players[0]?.id === myId;\r\n  const handleStartGame = () => {\r\n    socketRef.current.emit('start_game', { roomId });\r\n    // После старта игры инициализируем pre-flop\r\n    socketRef.current.emit('init_preflop', { roomId });\r\n  };\r\n\r\n  // Мои карты после старта\r\n  const myCards = cards.find(c => c.playerId === myId)?.cards || [];\r\n\r\n  return (\r\n    <div>\r\n      {showModal && (\r\n        <div style={modalStyles.overlay}>\r\n          <div style={modalStyles.modal}>\r\n            <h3>Enter your name</h3>\r\n            <form onSubmit={handleNameSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                value={tempName}\r\n                onChange={e => setTempName(e.target.value)}\r\n                autoFocus\r\n                required\r\n              />\r\n              <button type=\"submit\">Join</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!showModal && (\r\n        <>\r\n          <h2>Room: {roomId}</h2>\r\n\r\n          <h3>Players:</h3>\r\n          <ul>\r\n            {players.map(p => (\r\n              <li key={p.id}>{p.name}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <div>\r\n            <p>Pot: {pot}</p>\r\n            <p>Current Bet: {currentBet}</p>\r\n          </div>\r\n\r\n          {!statusMessage && isHost && (\r\n            <button onClick={handleStartGame}>Start Game</button>\r\n          )}\r\n\r\n          {statusMessage && <p>{statusMessage}</p>}\r\n\r\n          {myCards.length > 0 && (\r\n            <div>\r\n              <h3>Your Cards:</h3>\r\n              <ul>\r\n                {myCards.map((card, i) => (\r\n                  <li key={i}>{card}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Кнопки ставок, если это мой ход и игра уже на pre-flop */}\r\n          {currentPlayerId === myId && statusMessage === 'Pre-flop started' && (\r\n            <div>\r\n              <button onClick={() => socketRef.current.emit('player_action', { roomId, playerId: myId, action: 'fold' })}>\r\n                Fold\r\n              </button>\r\n              <button onClick={() => socketRef.current.emit('player_action', { roomId, playerId: myId, action: 'check' })}>\r\n                Check\r\n              </button>\r\n              <button onClick={() => socketRef.current.emit('player_action', { roomId, playerId: myId, action: 'call' })}>\r\n                Call\r\n              </button>\r\n              {/* Можно добавить ввод raiseAmount аналогично */}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}