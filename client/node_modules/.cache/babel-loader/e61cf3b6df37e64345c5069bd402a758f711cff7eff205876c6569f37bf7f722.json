{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\n//RoomPage.js\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    background: '#34495e',\n    // Изменили фон\n    padding: '2rem',\n    borderRadius: '10px',\n    textAlign: 'center',\n    color: 'white',\n    // Добавили цвет текста\n    boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n  }\n};\n/*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    maxWidth: '800px',\n    margin: '20px auto',\n    padding: '20px',\n    background: '#34495e',\n    borderRadius: '10px',\n    boxShadow: '0 0 20px rgba(0,0,0,0.3)'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [\"Room: \", roomId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      minHeight: '400px',\n      border: '2px dashed #7f8c8d',\n      borderRadius: '10px',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      },\n      children: board.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px',\n          marginBottom: '20px'\n        },\n        children: board.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n          value: card\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), myCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        bottom: '20px',\n        left: '50%',\n        transform: 'translateX(-50%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: myCards.map((v, i) => /*#__PURE__*/_jsxDEV(Card, {\n          value: v\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 1\n}, this);\nfunction RoomPage() {\n  _s();\n  var _players$, _players$find;\n  const {\n    roomId\n  } = useParams();\n\n  // общие стейты\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [showModal, setShowModal] = useState(true);\n  const [tempName, setTempName] = useState('');\n  const [myId, setMyId] = useState(null);\n  const [board, setBoard] = useState([]);\n\n  // ставки\n  const [pot, setPot] = useState(0);\n  const [currentBet, setCurrentBet] = useState(0);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [raiseAmount, setRaiseAmount] = useState(0);\n\n  // один сокет на компонент\n  const socketRef = useRef();\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socketRef.current = socket;\n    socket.on('connect', () => {\n      setMyId(socket.id);\n    });\n    socket.on('room_players', updated => {\n      setPlayers(updated);\n    });\n    socket.on('preflop_started', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Pre-flop started');\n    });\n    socket.on('betting_update', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n    });\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setStatusMessage('Game has started!');\n    });\n    socket.on('error_message', ({\n      message\n    }) => {\n      setStatusMessage(message);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // после ввода имени — join + запрос списка\n  useEffect(() => {\n    const socket = socketRef.current;\n    if (!playerName || !myId) return;\n    socket.emit('join_room', {\n      roomId,\n      playerName\n    });\n    socket.emit('request_room_players', {\n      roomId\n    });\n  }, [playerName, myId, roomId]);\n  useEffect(() => {\n    const socket = socketRef.current;\n    socket.on('flop', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Flop dealt');\n    });\n    socket.on('turn', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Turn dealt');\n    });\n    socket.on('river', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('River dealt');\n    });\n    socket.on('showdown', ({\n      board,\n      winners\n    }) => {\n      setBoard(board);\n      if (winners.length === 1) {\n        setStatusMessage(`Winner: ${winners[0].name}`);\n      } else {\n        setStatusMessage(`Winners: ${winners.map(w => w.name).join(', ')}`);\n      }\n    });\n    return () => {\n      socket.off('flop');\n      socket.off('turn');\n      socket.off('river');\n      socket.off('showdown');\n    };\n  }, []);\n\n  // сабмит модалки\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    const name = tempName.trim();\n    if (name) {\n      setPlayerName(name);\n      setShowModal(false);\n    }\n  };\n\n  // определяем хоста\n  const isHost = ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id) === myId;\n\n  // старт игры + инициализация pre-flop\n  const handleStartGame = () => {\n    const socket = socketRef.current;\n    socket.emit('start_game', {\n      roomId\n    });\n    socket.emit('init_preflop', {\n      roomId\n    });\n  };\n\n  // мои карты \n  const myCards = ((_players$find = players.find(p => p.id === myId)) === null || _players$find === void 0 ? void 0 : _players$find.cards) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempName,\n            onChange: e => setTempName(e.target.value),\n            style: {\n              padding: '8px',\n              marginBottom: '1rem',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              color: '#333' // Цвет текста в инпуте\n            },\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: '#27ae60',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            type: \"submit\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p.name\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pot: \", pot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Bet: \", currentBet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), !statusMessage && isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 31\n      }, this), myCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Cards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"your-cards\",\n          style: {\n            display: 'flex',\n            padding: '1rem 0'\n          },\n          children: myCards.map((v, i) => /*#__PURE__*/_jsxDEV(Card, {\n            value: v\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }, this), board.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Board:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem'\n          },\n          children: board.map((card, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: card\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 43\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }, this), isHost && statusMessage === 'Pre-flop started' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => socketRef.current.emit('deal_flop', {\n          roomId\n        }),\n        children: \"Deal Flop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }, this), isHost && statusMessage === 'Flop dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => socketRef.current.emit('deal_turn', {\n          roomId\n        }),\n        children: \"Deal Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }, this), isHost && statusMessage === 'Turn dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => socketRef.current.emit('deal_river', {\n          roomId\n        }),\n        children: \"Deal River\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }, this), isHost && statusMessage === 'River dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => socketRef.current.emit('showdown', {\n          roomId\n        }),\n        children: \"Showdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"JxMeygMIQ9SNSqdEw++ksKN4EJ4=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","useRef","io","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","modalStyles","overlay","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","modal","background","padding","borderRadius","textAlign","color","boxShadow","style","maxWidth","margin","children","roomId","fileName","_jsxFileName","lineNumber","columnNumber","minHeight","border","transform","board","length","gap","marginBottom","map","card","i","value","myCards","bottom","v","RoomPage","_s","_players$","_players$find","players","setPlayers","cards","setCards","statusMessage","setStatusMessage","playerName","setPlayerName","showModal","setShowModal","tempName","setTempName","myId","setMyId","setBoard","pot","setPot","currentBet","setCurrentBet","currentPlayerId","setCurrentPlayerId","raiseAmount","setRaiseAmount","socketRef","socket","current","on","id","updated","message","disconnect","emit","winners","name","w","join","off","handleNameSubmit","e","preventDefault","trim","isHost","handleStartGame","find","p","onSubmit","type","onChange","target","autoFocus","required","cursor","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["//RoomPage.js\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Card from '../components/Card';\r\n\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0, \r\n    left: 0,\r\n    width: '100vw', \r\n    height: '100vh',\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    display: 'flex', \r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    zIndex: 1000,\r\n  },\r\n  modal: {\r\n    background: '#34495e', // Изменили фон\r\n    padding: '2rem',\r\n    borderRadius: '10px',\r\n    textAlign: 'center',\r\n    color: 'white', // Добавили цвет текста\r\n    boxShadow: '0 0 20px rgba(0,0,0,0.5)',\r\n  },\r\n};\r\n\r\n<div style={{ \r\n  maxWidth: '800px', \r\n  margin: '20px auto', \r\n  padding: '20px',\r\n  background: '#34495e',\r\n  borderRadius: '10px',\r\n  boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n}}>\r\n  <h2 style={{ textAlign: 'center' }}>Room: {roomId}</h2>\r\n  \r\n  <div style={{ \r\n    position: 'relative', \r\n    minHeight: '400px', \r\n    border: '2px dashed #7f8c8d',\r\n    borderRadius: '10px',\r\n    padding: '20px'\r\n  }}>\r\n    {/* Расположение игроков */}\r\n    <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n      {board.length > 0 && (\r\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\r\n          {board.map((card, i) => <Card key={i} value={card} />)}\r\n        </div>\r\n      )}\r\n    </div>\r\n    \r\n    {/* Карты игрока */}\r\n    {myCards.length > 0 && (\r\n      <div style={{ \r\n        position: 'absolute', \r\n        bottom: '20px', \r\n        left: '50%', \r\n        transform: 'translateX(-50%)'\r\n      }}>\r\n        <div style={{ display: 'flex', gap: '10px' }}>\r\n          {myCards.map((v,i) => <Card key={i} value={v} />)}\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n</div>\r\n\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n\r\n  // общие стейты\r\n  const [players, setPlayers]             = useState([]);\r\n  const [cards, setCards]                 = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [playerName, setPlayerName]       = useState(''); \r\n  const [showModal, setShowModal]         = useState(true);\r\n  const [tempName, setTempName]           = useState('');\r\n  const [myId, setMyId]                   = useState(null);\r\n  const [board, setBoard]                 = useState([]);\r\n\r\n\r\n  // ставки\r\n  const [pot, setPot]                         = useState(0);\r\n  const [currentBet, setCurrentBet]           = useState(0);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [raiseAmount, setRaiseAmount]         = useState(0);\r\n\r\n  // один сокет на компонент\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3001');\r\n    socketRef.current = socket;\r\n\r\n    socket.on('connect', () => {\r\n      setMyId(socket.id);\r\n    });\r\n\r\n    socket.on('room_players', updated => {\r\n      setPlayers(updated);\r\n    });\r\n\r\n    socket.on('preflop_started', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Pre-flop started');\r\n    });\r\n\r\n    socket.on('betting_update', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n    });\r\n\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setStatusMessage('Game has started!');\r\n    });\r\n\r\n    socket.on('error_message', ({ message }) => {\r\n      setStatusMessage(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // после ввода имени — join + запрос списка\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n    if (!playerName || !myId) return;\r\n    socket.emit('join_room', { roomId, playerName });\r\n    socket.emit('request_room_players', { roomId });\r\n  }, [playerName, myId, roomId]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n\r\n    socket.on('flop', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Flop dealt');\r\n    });\r\n    socket.on('turn', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Turn dealt');\r\n    });\r\n    socket.on('river', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('River dealt');\r\n    });\r\n    socket.on('showdown', ({ board, winners }) => {\r\n      setBoard(board);\r\n      if (winners.length === 1) {\r\n        setStatusMessage(`Winner: ${winners[0].name}`);\r\n      } else {\r\n        setStatusMessage(`Winners: ${winners.map(w=>w.name).join(', ')}`);\r\n      }\r\n    });\r\n\r\n\r\n    return () => {\r\n      socket.off('flop');\r\n      socket.off('turn');\r\n      socket.off('river');\r\n      socket.off('showdown');\r\n    };\r\n  }, []);\r\n\r\n\r\n  // сабмит модалки\r\n  const handleNameSubmit = e => {\r\n    e.preventDefault();\r\n    const name = tempName.trim();\r\n    if (name) {\r\n      setPlayerName(name);\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  // определяем хоста\r\n  const isHost = players[0]?.id === myId;\r\n\r\n  // старт игры + инициализация pre-flop\r\n  const handleStartGame = () => {\r\n    const socket = socketRef.current;\r\n    socket.emit('start_game', { roomId });\r\n    socket.emit('init_preflop', { roomId });\r\n  };\r\n\r\n  // мои карты \r\n  const myCards = players.find(p => p.id === myId)?.cards || [];\r\n\r\n  return (\r\n    <div>\r\n      {showModal\r\n        ? (\r\n          <div style={modalStyles.overlay}>\r\n            <div style={modalStyles.modal}>\r\n              <h3 style={{ marginBottom: '1rem' }}>Enter your name</h3>\r\n              <form onSubmit={handleNameSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={tempName}\r\n                  onChange={e => setTempName(e.target.value)}\r\n                  style={{\r\n                    padding: '8px',\r\n                    marginBottom: '1rem',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid #ddd',\r\n                    color: '#333' // Цвет текста в инпуте\r\n                  }}\r\n                  autoFocus\r\n                  required\r\n                />\r\n                <button \r\n                  style={{\r\n                    background: '#27ae60',\r\n                    color: 'white',\r\n                    padding: '8px 16px',\r\n                    borderRadius: '4px',\r\n                    border: 'none',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  type=\"submit\"\r\n                >\r\n                  Join\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n        : (\r\n          <>\r\n            <h2>Room: {roomId}</h2>\r\n            <h3>Players:</h3>\r\n            <ul>{players.map(p => <li key={p.id}>{p.name}</li>)}</ul>\r\n\r\n            <div>\r\n              <p>Pot: {pot}</p>\r\n              <p>Current Bet: {currentBet}</p>\r\n            </div>\r\n\r\n            {!statusMessage && isHost && (\r\n              <button onClick={handleStartGame}>Start Game</button>\r\n            )}\r\n\r\n            {statusMessage && <p>{statusMessage}</p>}\r\n\r\n            {myCards.length > 0 && (\r\n              <div>\r\n                <h3>Your Cards:</h3>\r\n                <div className=\"your-cards\" style={{ display: 'flex', padding: '1rem 0' }}>\r\n                  {myCards.map((v,i) => <Card key={i} value={v} />)}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Ставки */}\r\n            {board.length > 0 && (\r\n              <div>\r\n                <h3>Board:</h3>\r\n                <ul style={{ display: 'flex', gap: '0.5rem' }}>\r\n                  {board.map((card, i) => <li key={i}>{card}</li>)}\r\n                </ul>\r\n              </div>\r\n            )}\r\n\r\n            {/* Кнопки фаз */}\r\n            {isHost && statusMessage === 'Pre-flop started' && (\r\n              <button onClick={() => socketRef.current.emit('deal_flop', { roomId })}>\r\n                Deal Flop\r\n              </button>\r\n            )}\r\n            {isHost && statusMessage === 'Flop dealt' && (\r\n              <button onClick={() => socketRef.current.emit('deal_turn', { roomId })}>\r\n                Deal Turn\r\n              </button>\r\n            )}\r\n            {isHost && statusMessage === 'Turn dealt' && (\r\n              <button onClick={() => socketRef.current.emit('deal_river', { roomId })}>\r\n                Deal River\r\n              </button>\r\n            )}\r\n            {isHost && statusMessage === 'River dealt' && (\r\n              <button onClick={() => socketRef.current.emit('showdown', { roomId })}>\r\n                Showdown\r\n              </button>\r\n            )}\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}