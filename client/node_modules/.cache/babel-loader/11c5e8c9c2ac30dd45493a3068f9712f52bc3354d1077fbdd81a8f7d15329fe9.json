{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\JoinPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/JoinPage.js\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JoinPage() {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const handleJoinRoom = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/join-room', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId\n        }) // Отправляем roomId на сервер\n      });\n      if (!response.ok) {\n        // Если сервер вернул ошибку (например, 404), выводим её\n        const errorData = await response.json();\n        setStatusMessage(errorData.message);\n      } else {\n        const data = await response.json();\n        setStatusMessage(data.message);\n      }\n    } catch (error) {\n      setStatusMessage('Failed to connect to the server');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Room ID\",\n      value: roomId,\n      onChange: e => setRoomId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinRoom,\n      children: \"Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(JoinPage, \"hwknKiIfiGdCRP5ia/mCztV4LlM=\");\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","JoinPage","_s","roomId","setRoomId","statusMessage","setStatusMessage","handleJoinRoom","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/JoinPage.js"],"sourcesContent":["// client/src/pages/JoinPage.js\r\nimport { useState } from 'react';\r\n\r\nfunction JoinPage() {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n\r\n  const handleJoinRoom = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/join-room', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ roomId }), // Отправляем roomId на сервер\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Если сервер вернул ошибку (например, 404), выводим её\r\n        const errorData = await response.json();\r\n        setStatusMessage(errorData.message);\r\n      } else {\r\n        const data = await response.json();\r\n        setStatusMessage(data.message);\r\n      }\r\n    } catch (error) {\r\n      setStatusMessage('Failed to connect to the server');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Join a Room</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Room ID\"\r\n        value={roomId}\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n      />\r\n      <button onClick={handleJoinRoom}>Join Room</button>\r\n      <p>{statusMessage}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinPage;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAO,CAAC,CAAC,CAAE;MACpC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QAChB;QACA,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvCX,gBAAgB,CAACU,SAAS,CAACE,OAAO,CAAC;MACrC,CAAC,MAAM;QACL,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCX,gBAAgB,CAACa,IAAI,CAACD,OAAO,CAAC;MAChC;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdd,gBAAgB,CAAC,iCAAiC,CAAC;MACnDe,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAE1B,MAAO;MACd2B,QAAQ,EAAGC,CAAC,IAAK3B,SAAS,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAE1B,cAAe;MAAAe,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnD1B,OAAA;MAAAsB,QAAA,EAAIjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACxB,EAAA,CAzCQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}