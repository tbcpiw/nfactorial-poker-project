{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction RoomPage() {\n  _s();\n  var _cards$find;\n  const {\n    roomId\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  useEffect(() => {\n    const playerName = prompt('Enter your name');\n    socket.emit('join_room', {\n      roomId,\n      playerName\n    });\n    socket.emit('request_room_players', {\n      roomId\n    });\n    socket.on('room_players', updated => setPlayers(updated));\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setGameStarted(true);\n    });\n    socket.on('error_message', ({\n      message\n    }) => setErrorMsg(message));\n    return () => {\n      socket.off('room_players');\n      socket.off('game_started');\n      socket.off('error_message');\n      socket.disconnect();\n    };\n  }, [roomId]);\n  const handleStartGame = () => {\n    socket.emit('start_game', {\n      roomId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: p.name\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game has started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Cards:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_cards$find = cards.find(c => c.playerId === socket.id)) === null || _cards$find === void 0 ? void 0 : _cards$find.cards.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"hy9Rh4CehFpo28hZXwtQJOxILWw=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","RoomPage","_s","_cards$find","roomId","players","setPlayers","cards","setCards","gameStarted","setGameStarted","errorMsg","setErrorMsg","playerName","prompt","emit","on","updated","message","off","disconnect","handleStartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","name","id","style","color","onClick","find","c","playerId","i","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    const playerName = prompt('Enter your name');\r\n    socket.emit('join_room', { roomId, playerName });\r\n    socket.emit('request_room_players', { roomId });\r\n\r\n    socket.on('room_players', updated => setPlayers(updated));\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setGameStarted(true);\r\n    });\r\n    socket.on('error_message', ({ message }) => setErrorMsg(message));\r\n\r\n    return () => {\r\n      socket.off('room_players');\r\n      socket.off('game_started');\r\n      socket.off('error_message');\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const handleStartGame = () => {\r\n    socket.emit('start_game', { roomId });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Room: {roomId}</h2>\r\n\r\n      <h3>Players:</h3>\r\n      <ul>\r\n        {players.map(p => <li key={p.id}>{p.name}</li>)}\r\n      </ul>\r\n\r\n      {errorMsg && <p style={{ color: 'red' }}>{errorMsg}</p>}\r\n\r\n      {!gameStarted ? (\r\n        <button onClick={handleStartGame}>Start Game</button>\r\n      ) : (\r\n        <>\r\n          <p>Game has started!</p>\r\n          <h3>Your Cards:</h3>\r\n          <ul>\r\n            {cards\r\n              .find(c => c.playerId === socket.id)\r\n              ?.cards.map((c, i) => <li key={i}>{c}</li>)}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}