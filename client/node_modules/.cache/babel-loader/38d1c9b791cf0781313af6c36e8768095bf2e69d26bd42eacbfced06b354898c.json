{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction RoomPage() {\n  _s();\n  var _cards$find;\n  const {\n    roomId\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  useEffect(() => {\n    // Запрашиваем имя только один раз\n    const name = prompt('Enter your name');\n    setPlayerName(name);\n\n    // После этого соединяемся с комнатой\n    socket.emit('join_room', {\n      roomId,\n      playerName: name\n    });\n\n    // Слушаем события\n    socket.on('room_players', updatedPlayers => {\n      setPlayers(updatedPlayers);\n    });\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setStatusMessage('Game has started!');\n    });\n    socket.emit('request_room_players', {\n      roomId\n    });\n    return () => {\n      socket.off('room_players');\n      socket.off('game_started');\n    };\n  }, [roomId]);\n  const myId = socket.id;\n  const myCards = ((_cards$find = cards.find(c => c.playerId === myId)) === null || _cards$find === void 0 ? void 0 : _cards$find.cards) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: p.name\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), myCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Cards:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: myCards.map((card, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: card\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"siMj+3okqvY42a3yeGeaTzAP2ag=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","io","jsxDEV","_jsxDEV","socket","RoomPage","_s","_cards$find","roomId","players","setPlayers","cards","setCards","statusMessage","setStatusMessage","playerName","setPlayerName","name","prompt","emit","on","updatedPlayers","off","myId","id","myCards","find","c","playerId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","length","card","i","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n  const [cards, setCards] = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [playerName, setPlayerName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Запрашиваем имя только один раз\r\n    const name = prompt('Enter your name');\r\n    setPlayerName(name);\r\n\r\n    // После этого соединяемся с комнатой\r\n    socket.emit('join_room', { roomId, playerName: name });\r\n\r\n    // Слушаем события\r\n    socket.on('room_players', (updatedPlayers) => {\r\n      setPlayers(updatedPlayers);\r\n    });\r\n\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setStatusMessage('Game has started!');\r\n    });\r\n\r\n    socket.emit('request_room_players', { roomId });\r\n\r\n    return () => {\r\n      socket.off('room_players');\r\n      socket.off('game_started');\r\n    };\r\n  }, [roomId]);\r\n\r\n  const myId = socket.id;\r\n\r\n  const myCards = cards.find(c => c.playerId === myId)?.cards || [];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Room: {roomId}</h2>\r\n\r\n      <h3>Players:</h3>\r\n      <ul>\r\n        {players.map(p => (\r\n          <li key={p.id}>{p.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n\r\n      {myCards.length > 0 && (\r\n        <div>\r\n          <h3>Your Cards:</h3>\r\n          <ul>\r\n            {myCards.map((card, i) => <li key={i}>{card}</li>)}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,WAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,IAAI,GAAGC,MAAM,CAAC,iBAAiB,CAAC;IACtCF,aAAa,CAACC,IAAI,CAAC;;IAEnB;IACAb,MAAM,CAACe,IAAI,CAAC,WAAW,EAAE;MAAEX,MAAM;MAAEO,UAAU,EAAEE;IAAK,CAAC,CAAC;;IAEtD;IACAb,MAAM,CAACgB,EAAE,CAAC,cAAc,EAAGC,cAAc,IAAK;MAC5CX,UAAU,CAACW,cAAc,CAAC;IAC5B,CAAC,CAAC;IAEFjB,MAAM,CAACgB,EAAE,CAAC,cAAc,EAAE,CAAC;MAAET;IAAM,CAAC,KAAK;MACvCC,QAAQ,CAACD,KAAK,CAAC;MACfG,gBAAgB,CAAC,mBAAmB,CAAC;IACvC,CAAC,CAAC;IAEFV,MAAM,CAACe,IAAI,CAAC,sBAAsB,EAAE;MAAEX;IAAO,CAAC,CAAC;IAE/C,OAAO,MAAM;MACXJ,MAAM,CAACkB,GAAG,CAAC,cAAc,CAAC;MAC1BlB,MAAM,CAACkB,GAAG,CAAC,cAAc,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,MAAMe,IAAI,GAAGnB,MAAM,CAACoB,EAAE;EAEtB,MAAMC,OAAO,GAAG,EAAAlB,WAAA,GAAAI,KAAK,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,KAAKL,IAAI,CAAC,cAAAhB,WAAA,uBAApCA,WAAA,CAAsCI,KAAK,KAAI,EAAE;EAEjE,oBACER,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,GAAI,QAAM,EAACrB,MAAM;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEvB9B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB9B,OAAA;MAAA0B,QAAA,EACGpB,OAAO,CAACyB,GAAG,CAACC,CAAC,iBACZhC,OAAA;QAAA0B,QAAA,EAAgBM,CAAC,CAAClB;MAAI,GAAbkB,CAAC,CAACX,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEJpB,aAAa,iBAAIV,OAAA;MAAA0B,QAAA,EAAIhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvCR,OAAO,CAACW,MAAM,GAAG,CAAC,iBACjBjC,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB9B,OAAA;QAAA0B,QAAA,EACGJ,OAAO,CAACS,GAAG,CAAC,CAACG,IAAI,EAAEC,CAAC,kBAAKnC,OAAA;UAAA0B,QAAA,EAAaQ;QAAI,GAARC,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CA5DQD,QAAQ;EAAA,QACIP,SAAS;AAAA;AAAAyC,EAAA,GADrBlC,QAAQ;AA8DjB,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}