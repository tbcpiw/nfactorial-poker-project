{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\poker-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('Проверка соединения...');\n  const [roomStatus, setRoomStatus] = useState(''); // Статус комнаты\n\n  useEffect(() => {\n    fetch('http://localhost:3001').then(res => res.text()).then(data => {\n      setMessage(data); // Выводим ответ сервера\n    }).catch(err => {\n      setMessage('Ошибка подключения к серверу');\n      console.error('Ошибка:', err);\n    });\n  }, []);\n\n  // Функции для обработки кнопок\n  const createRoom = () => {\n    setRoomStatus('Создание комнаты...');\n    // Пример запроса на создание комнаты\n    fetch('http://localhost:3001/create-room', {\n      method: 'POST'\n    }).then(res => res.json()).then(data => {\n      setRoomStatus(`Комната создана: ${data.roomId}`);\n    }).catch(err => {\n      setRoomStatus('Ошибка при создании комнаты');\n      console.error('Ошибка:', err);\n    });\n  };\n  const joinRoom = () => {\n    const roomId = prompt('Введите ID комнаты:');\n    setRoomStatus('Подключение к комнате...');\n    // Пример запроса на присоединение к комнате\n    fetch(`http://localhost:3001/join-room/${roomId}`, {\n      method: 'POST'\n    }).then(res => res.json()).then(data => {\n      setRoomStatus(`Вы присоединились к комнате: ${data.roomId}`);\n    }).catch(err => {\n      setRoomStatus('Ошибка при подключении к комнате');\n      console.error('Ошибка:', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432 \\u043F\\u043E\\u043A\\u0435\\u0440!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRoom,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"\\u041F\\u0440\\u0438\\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0438\\u0442\\u044C\\u0441\\u044F \\u043A \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: roomStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fJMKdZ5Oy8e0kxAQ8wJ586sLvXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","roomStatus","setRoomStatus","fetch","then","res","text","data","catch","err","console","error","createRoom","method","json","roomId","joinRoom","prompt","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abdum/poker-client/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction App() {\n  const [message, setMessage] = useState('Проверка соединения...');\n  const [roomStatus, setRoomStatus] = useState(''); // Статус комнаты\n\n  useEffect(() => {\n    fetch('http://localhost:3001')\n      .then(res => res.text())\n      .then(data => {\n        setMessage(data); // Выводим ответ сервера\n      })\n      .catch(err => {\n        setMessage('Ошибка подключения к серверу');\n        console.error('Ошибка:', err);\n      });\n  }, []);\n\n  // Функции для обработки кнопок\n  const createRoom = () => {\n    setRoomStatus('Создание комнаты...');\n    // Пример запроса на создание комнаты\n    fetch('http://localhost:3001/create-room', { method: 'POST' })\n      .then(res => res.json())\n      .then(data => {\n        setRoomStatus(`Комната создана: ${data.roomId}`);\n      })\n      .catch(err => {\n        setRoomStatus('Ошибка при создании комнаты');\n        console.error('Ошибка:', err);\n      });\n  };\n\n  const joinRoom = () => {\n    const roomId = prompt('Введите ID комнаты:');\n    setRoomStatus('Подключение к комнате...');\n    // Пример запроса на присоединение к комнате\n    fetch(`http://localhost:3001/join-room/${roomId}`, { method: 'POST' })\n      .then(res => res.json())\n      .then(data => {\n        setRoomStatus(`Вы присоединились к комнате: ${data.roomId}`);\n      })\n      .catch(err => {\n        setRoomStatus('Ошибка при подключении к комнате');\n        console.error('Ошибка:', err);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Добро пожаловать в покер!</h1>\n      <p>{message}</p>\n      <div>\n        <button onClick={createRoom}>Создать комнату</button>\n        <button onClick={joinRoom}>Присоединиться к комнате</button>\n      </div>\n      <p>{roomStatus}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}