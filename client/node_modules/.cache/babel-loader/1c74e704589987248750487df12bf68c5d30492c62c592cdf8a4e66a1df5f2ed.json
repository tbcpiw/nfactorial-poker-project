{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdum\\\\nfactorial_poker_project\\\\client\\\\src\\\\pages\\\\RoomPage.js\",\n  _s = $RefreshSig$();\n//RoomPage.js\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport Card from '../components/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    background: '#34495e',\n    // Изменили фон\n    padding: '2rem',\n    borderRadius: '10px',\n    textAlign: 'center',\n    color: 'white',\n    // Добавили цвет текста\n    boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n  }\n};\nfunction RoomPage() {\n  _s();\n  var _players$, _players$find;\n  const {\n    roomId\n  } = useParams();\n\n  // общие стейты\n  const [players, setPlayers] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [playerName, setPlayerName] = useState('');\n  const [showModal, setShowModal] = useState(true);\n  const [tempName, setTempName] = useState('');\n  const [myId, setMyId] = useState(null);\n  const [board, setBoard] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // ставки\n  const [pot, setPot] = useState(0);\n  const [currentBet, setCurrentBet] = useState(0);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [raiseAmount, setRaiseAmount] = useState(0);\n\n  // один сокет на компонент\n  const socketRef = useRef();\n  useEffect(() => {\n    const socket = io('http://localhost:3001');\n    socketRef.current = socket;\n    socket.on('connect', () => {\n      setMyId(socket.id);\n    });\n    socket.on('room_players', updated => {\n      setPlayers(updated);\n    });\n    socket.on('preflop_started', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Pre-flop started');\n    });\n    socket.on('betting_update', ({\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n    });\n    socket.on('game_started', ({\n      cards\n    }) => {\n      setCards(cards);\n      setStatusMessage('Game has started!');\n    });\n    socket.on('error_message', ({\n      message\n    }) => {\n      setStatusMessage(message);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const socket = socketRef.current;\n\n    // Обработчик новых сообщений\n    socket.on('chat_message', message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => {\n      socket.off('chat_message');\n    };\n  }, []);\n\n  // Отправка сообщений\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    socketRef.current.emit('chat_message', {\n      roomId,\n      sender: playerName,\n      text: newMessage\n    });\n    setNewMessage('');\n  };\n\n  // после ввода имени — join + запрос списка\n  useEffect(() => {\n    const socket = socketRef.current;\n    if (!playerName || !myId) return;\n    socket.emit('join_room', {\n      roomId,\n      playerName\n    });\n    socket.emit('request_room_players', {\n      roomId\n    });\n  }, [playerName, myId, roomId]);\n  useEffect(() => {\n    const socket = socketRef.current;\n    socket.on('flop', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Flop dealt');\n    });\n    socket.on('turn', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('Turn dealt');\n    });\n    socket.on('river', ({\n      board,\n      players,\n      pot,\n      currentBet,\n      currentPlayerId\n    }) => {\n      setBoard(board);\n      setPlayers(players);\n      setPot(pot);\n      setCurrentBet(currentBet);\n      setCurrentPlayerId(currentPlayerId);\n      setStatusMessage('River dealt');\n    });\n    socket.on('showdown', ({\n      board,\n      winners\n    }) => {\n      setBoard(board);\n      if (winners.length === 1) {\n        setStatusMessage(`Winner: ${winners[0].name}`);\n      } else {\n        setStatusMessage(`Winners: ${winners.map(w => w.name).join(', ')}`);\n      }\n    });\n    return () => {\n      socket.off('flop');\n      socket.off('turn');\n      socket.off('river');\n      socket.off('showdown');\n    };\n  }, []);\n\n  // сабмит модалки\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    const name = tempName.trim();\n    if (name) {\n      setPlayerName(name);\n      setShowModal(false);\n    }\n  };\n\n  // определяем хоста\n  const isHost = ((_players$ = players[0]) === null || _players$ === void 0 ? void 0 : _players$.id) === myId;\n\n  // старт игры + инициализация pre-flop\n  const handleStartGame = () => {\n    const socket = socketRef.current;\n    socket.emit('start_game', {\n      roomId\n    });\n    socket.emit('init_preflop', {\n      roomId\n    });\n  };\n\n  // мои карты \n  const myCards = ((_players$find = players.find(p => p.id === myId)) === null || _players$find === void 0 ? void 0 : _players$find.cards) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempName,\n            onChange: e => setTempName(e.target.value),\n            style: {\n              padding: '8px',\n              marginBottom: '1rem',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              color: '#333' // Цвет текста в инпуте\n            },\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: '#27ae60',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            type: \"submit\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '800px',\n          margin: '20px auto',\n          padding: '20px',\n          background: '#34495e',\n          borderRadius: '10px',\n          boxShadow: '0 0 20px rgba(0,0,0,0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '20px 0',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Players:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0\n            },\n            children: players.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: p.name\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Pot: \", pot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current Bet: \", currentBet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            minHeight: '400px',\n            border: '2px dashed #7f8c8d',\n            borderRadius: '10px',\n            padding: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)'\n            },\n            children: board.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px',\n                marginBottom: '20px'\n              },\n              children: board.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n                value: card\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 47\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), myCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              bottom: '20px',\n              left: '50%',\n              transform: 'translateX(-50%)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px'\n              },\n              children: myCards.map((v, i) => /*#__PURE__*/_jsxDEV(Card, {\n                value: v\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            textAlign: 'center'\n          },\n          children: [!statusMessage && isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartGame,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 35\n          }, this), isHost && statusMessage === 'Pre-flop started' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('deal_flop', {\n              roomId\n            }),\n            children: \"Deal Flop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this), isHost && statusMessage === 'Flop dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('deal_turn', {\n              roomId\n            }),\n            children: \"Deal Turn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 19\n          }, this), isHost && statusMessage === 'Turn dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('deal_river', {\n              roomId\n            }),\n            children: \"Deal River\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 19\n          }, this), isHost && statusMessage === 'River dealt' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => socketRef.current.emit('showdown', {\n              roomId\n            }),\n            children: \"Showdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          right: '20px',\n          bottom: '20px',\n          width: '300px',\n          background: 'rgba(40, 40, 40, 0.9)',\n          borderRadius: '8px',\n          padding: '10px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.3)',\n          zIndex: 1000,\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '200px',\n            overflowY: 'auto',\n            marginBottom: '10px'\n          },\n          children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '5px 0',\n              padding: '8px',\n              background: 'rgba(255,255,255,0.1)',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                color: '#27ae60'\n              },\n              children: [msg.sender, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '8px'\n              },\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: sendMessage,\n          style: {\n            display: 'flex',\n            gap: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            style: {\n              flex: 1,\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              background: 'rgba(255,255,255,0.9)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '8px 16px',\n              background: '#27ae60',\n              border: 'none',\n              borderRadius: '4px',\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomPage, \"won6gKsEYP6piEB3l6t99JNZIoI=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["useParams","useState","useEffect","useRef","io","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","modalStyles","overlay","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","modal","background","padding","borderRadius","textAlign","color","boxShadow","RoomPage","_s","_players$","_players$find","roomId","players","setPlayers","cards","setCards","statusMessage","setStatusMessage","playerName","setPlayerName","showModal","setShowModal","tempName","setTempName","myId","setMyId","board","setBoard","messages","setMessages","newMessage","setNewMessage","pot","setPot","currentBet","setCurrentBet","currentPlayerId","setCurrentPlayerId","raiseAmount","setRaiseAmount","socketRef","socket","current","on","id","updated","message","disconnect","prev","off","sendMessage","e","preventDefault","trim","emit","sender","text","winners","length","name","map","w","join","handleNameSubmit","isHost","handleStartGame","myCards","find","p","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","border","autoFocus","required","cursor","maxWidth","margin","listStyle","minHeight","transform","gap","card","i","bottom","v","marginTop","onClick","right","overflowY","msg","marginLeft","placeholder","flex","_c","$RefreshReg$"],"sources":["C:/Users/abdum/nfactorial_poker_project/client/src/pages/RoomPage.js"],"sourcesContent":["//RoomPage.js\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Card from '../components/Card';\r\n\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0, \r\n    left: 0,\r\n    width: '100vw', \r\n    height: '100vh',\r\n    backgroundColor: 'rgba(0,0,0,0.6)',\r\n    display: 'flex', \r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    zIndex: 1000,\r\n  },\r\n  modal: {\r\n    background: '#34495e', // Изменили фон\r\n    padding: '2rem',\r\n    borderRadius: '10px',\r\n    textAlign: 'center',\r\n    color: 'white', // Добавили цвет текста\r\n    boxShadow: '0 0 20px rgba(0,0,0,0.5)',\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction RoomPage() {\r\n  const { roomId } = useParams();\r\n\r\n  // общие стейты\r\n  const [players, setPlayers]             = useState([]);\r\n  const [cards, setCards]                 = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [playerName, setPlayerName]       = useState(''); \r\n  const [showModal, setShowModal]         = useState(true);\r\n  const [tempName, setTempName]           = useState('');\r\n  const [myId, setMyId]                   = useState(null);\r\n  const [board, setBoard]                 = useState([]);\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n\r\n  // ставки\r\n  const [pot, setPot]                         = useState(0);\r\n  const [currentBet, setCurrentBet]           = useState(0);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [raiseAmount, setRaiseAmount]         = useState(0);\r\n\r\n  // один сокет на компонент\r\n  const socketRef = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:3001');\r\n    socketRef.current = socket;\r\n\r\n    socket.on('connect', () => {\r\n      setMyId(socket.id);\r\n    });\r\n\r\n    socket.on('room_players', updated => {\r\n      setPlayers(updated);\r\n    });\r\n\r\n    socket.on('preflop_started', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Pre-flop started');\r\n    });\r\n\r\n    socket.on('betting_update', ({ players, pot, currentBet, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n    });\r\n\r\n    socket.on('game_started', ({ cards }) => {\r\n      setCards(cards);\r\n      setStatusMessage('Game has started!');\r\n    });\r\n\r\n    socket.on('error_message', ({ message }) => {\r\n      setStatusMessage(message);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n\r\n    // Обработчик новых сообщений\r\n    socket.on('chat_message', (message) => {\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('chat_message');\r\n    };\r\n  }, []);\r\n\r\n  // Отправка сообщений\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    socketRef.current.emit('chat_message', {\r\n      roomId,\r\n      sender: playerName,\r\n      text: newMessage\r\n    });\r\n\r\n    setNewMessage('');\r\n  };\r\n\r\n\r\n  // после ввода имени — join + запрос списка\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n    if (!playerName || !myId) return;\r\n    socket.emit('join_room', { roomId, playerName });\r\n    socket.emit('request_room_players', { roomId });\r\n  }, [playerName, myId, roomId]);\r\n\r\n  useEffect(() => {\r\n    const socket = socketRef.current;\r\n\r\n    socket.on('flop', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Flop dealt');\r\n    });\r\n    socket.on('turn', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('Turn dealt');\r\n    });\r\n    socket.on('river', ({ board, players, pot, currentBet, currentPlayerId }) => {\r\n      setBoard(board);\r\n      setPlayers(players);\r\n      setPot(pot);\r\n      setCurrentBet(currentBet);\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setStatusMessage('River dealt');\r\n    });\r\n    socket.on('showdown', ({ board, winners }) => {\r\n      setBoard(board);\r\n      if (winners.length === 1) {\r\n        setStatusMessage(`Winner: ${winners[0].name}`);\r\n      } else {\r\n        setStatusMessage(`Winners: ${winners.map(w=>w.name).join(', ')}`);\r\n      }\r\n    });\r\n\r\n\r\n    return () => {\r\n      socket.off('flop');\r\n      socket.off('turn');\r\n      socket.off('river');\r\n      socket.off('showdown');\r\n    };\r\n  }, []);\r\n\r\n\r\n  // сабмит модалки\r\n  const handleNameSubmit = e => {\r\n    e.preventDefault();\r\n    const name = tempName.trim();\r\n    if (name) {\r\n      setPlayerName(name);\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  // определяем хоста\r\n  const isHost = players[0]?.id === myId;\r\n\r\n  // старт игры + инициализация pre-flop\r\n  const handleStartGame = () => {\r\n    const socket = socketRef.current;\r\n    socket.emit('start_game', { roomId });\r\n    socket.emit('init_preflop', { roomId });\r\n  };\r\n\r\n  // мои карты \r\n  const myCards = players.find(p => p.id === myId)?.cards || [];\r\n\r\n  return (\r\n    <div>\r\n      {showModal\r\n        ? (\r\n          <div style={modalStyles.overlay}>\r\n            <div style={modalStyles.modal}>\r\n              <h3 style={{ marginBottom: '1rem' }}>Enter your name</h3>\r\n              <form onSubmit={handleNameSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={tempName}\r\n                  onChange={e => setTempName(e.target.value)}\r\n                  style={{\r\n                    padding: '8px',\r\n                    marginBottom: '1rem',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid #ddd',\r\n                    color: '#333' // Цвет текста в инпуте\r\n                  }}\r\n                  autoFocus\r\n                  required\r\n                />\r\n                <button \r\n                  style={{\r\n                    background: '#27ae60',\r\n                    color: 'white',\r\n                    padding: '8px 16px',\r\n                    borderRadius: '4px',\r\n                    border: 'none',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  type=\"submit\"\r\n                >\r\n                  Join\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n        : (\r\n          <>\r\n            <div style={{ \r\n              maxWidth: '800px', \r\n              margin: '20px auto', \r\n              padding: '20px',\r\n              background: '#34495e',\r\n              borderRadius: '10px',\r\n              boxShadow: '0 0 20px rgba(0,0,0,0.3)'\r\n            }}>\r\n              <h2 style={{ textAlign: 'center' }}>Room: {roomId}</h2>\r\n              \r\n              {/* Игроки и статус игры */}\r\n              <div style={{ margin: '20px 0', textAlign: 'center' }}>\r\n                <h3>Players:</h3>\r\n                <ul style={{ listStyle: 'none', padding: 0 }}>\r\n                  {players.map(p => <li key={p.id}>{p.name}</li>)}\r\n                </ul>\r\n                \r\n                <div>\r\n                  <p>Pot: {pot}</p>\r\n                  <p>Current Bet: {currentBet}</p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Игровой стол */}\r\n              <div style={{ \r\n                position: 'relative', \r\n                minHeight: '400px', \r\n                border: '2px dashed #7f8c8d',\r\n                borderRadius: '10px',\r\n                padding: '20px'\r\n              }}>\r\n                {/* Общие карты */}\r\n                <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                  {board.length > 0 && (\r\n                    <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\r\n                      {board.map((card, i) => <Card key={i} value={card} />)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Карты текущего игрока */}\r\n                {myCards.length > 0 && (\r\n                  <div style={{ \r\n                    position: 'absolute', \r\n                    bottom: '20px', \r\n                    left: '50%', \r\n                    transform: 'translateX(-50%)'\r\n                  }}>\r\n                    <div style={{ display: 'flex', gap: '10px' }}>\r\n                      {myCards.map((v,i) => <Card key={i} value={v} />)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Кнопки управления и статус */}\r\n              <div style={{ marginTop: '20px', textAlign: 'center' }}>\r\n                {!statusMessage && isHost && (\r\n                  <button onClick={handleStartGame}>Start Game</button>\r\n                )}\r\n\r\n                {statusMessage && <p>{statusMessage}</p>}\r\n\r\n                {/* Кнопки фаз */}\r\n                {isHost && statusMessage === 'Pre-flop started' && (\r\n                  <button onClick={() => socketRef.current.emit('deal_flop', { roomId })}>\r\n                    Deal Flop\r\n                  </button>\r\n                )}\r\n                {isHost && statusMessage === 'Flop dealt' && (\r\n                  <button onClick={() => socketRef.current.emit('deal_turn', { roomId })}>\r\n                    Deal Turn\r\n                  </button>\r\n                )}\r\n                {isHost && statusMessage === 'Turn dealt' && (\r\n                  <button onClick={() => socketRef.current.emit('deal_river', { roomId })}>\r\n                    Deal River\r\n                  </button>\r\n                )}\r\n                {isHost && statusMessage === 'River dealt' && (\r\n                  <button onClick={() => socketRef.current.emit('showdown', { roomId })}>\r\n                    Showdown\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div \r\n              style={{\r\n                position: 'fixed',\r\n                right: '20px',\r\n                bottom: '20px',\r\n                width: '300px',\r\n                background: 'rgba(40, 40, 40, 0.9)',\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                boxShadow: '0 2px 10px rgba(0,0,0,0.3)',\r\n                zIndex: 1000,\r\n                color: 'white'\r\n              }}\r\n            >\r\n              <div \r\n                style={{\r\n                  height: '200px',\r\n                  overflowY: 'auto',\r\n                  marginBottom: '10px'\r\n                }}\r\n              >\r\n                {messages.map((msg, i) => (\r\n                  <div \r\n                    key={i} \r\n                    style={{\r\n                      margin: '5px 0',\r\n                      padding: '8px',\r\n                      background: 'rgba(255,255,255,0.1)',\r\n                      borderRadius: '4px'\r\n                    }}\r\n                  >\r\n                    <strong style={{ color: '#27ae60' }}>{msg.sender}:</strong> \r\n                    <span style={{ marginLeft: '8px' }}>{msg.text}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <form \r\n                onSubmit={sendMessage} \r\n                style={{ display: 'flex', gap: '5px' }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  placeholder=\"Type your message...\"\r\n                  style={{\r\n                    flex: 1,\r\n                    padding: '8px',\r\n                    borderRadius: '4px',\r\n                    border: '1px solid #ddd',\r\n                    background: 'rgba(255,255,255,0.9)'\r\n                  }}\r\n                />\r\n                <button \r\n                  type=\"submit\"\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    background: '#27ae60',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    color: 'white',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n            \r\n        )\r\n        \r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}